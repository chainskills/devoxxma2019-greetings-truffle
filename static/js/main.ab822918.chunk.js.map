{"version":3,"sources":["drizzleOptions.js","components/Account.js","components/Information.js","components/Greetings.js","components/ServiceFee.js","App.js","index.js"],"names":["drizzleOptions","web3","block","fallback","type","url","contracts","events","ChainBizz","Account","account","balance","useEffect","M","AutoInit","className","diameter","seed","jsNumberForAddress","Information","drizzle","greetings","serviceFee","utils","fromWei","Greetings","refFirstField","useRef","useState","setGreetings","current","focus","ref","name","value","data-length","onChange","e","target","style","height","htmlFor","href","onClick","methods","send","from","gas","on","receipt","console","log","err","error","margin","ServiceFee","newFee","setNewFee","min","step","setServiceFee","toWei","App","drizzleContext","drizzleState","initialized","setAccount","setBalance","owner","setOwner","greetingsKey","setGreetingsKey","serviceFeeKey","setServiceFeeKey","a","currAccout","accounts","eth","getBalance","currBalance","CharacterCounter","init","document","querySelectorAll","getGreetings","cacheCall","getServiceFee","call","fetchAccount","window","ethereum","location","reload","currentGreetings","serviceFeeRef","drizzleStore","generateStore","Drizzle","ReactDOM","render","Provider","Consumer","getElementById"],"mappings":"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","file":"static/js/main.ab822918.chunk.js","sourcesContent":["import Greetings from \"./contracts/Greetings.json\";\n\nconst drizzleOptions = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:8545\"\n    }\n  },\n  contracts: [Greetings],\n  events: {\n    ChainBizz: [\"GreetingsChangedEvent\", \"NewServiceFeeEvent\"]\n  }\n};\n\nexport default drizzleOptions;\n","import React, {useEffect} from \"react\";\nimport JazzIcon, {jsNumberForAddress} from \"react-jazzicon\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport \"./Account.css\";\n\nconst Account = ({account, balance}) => {\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n\n      <div className=\"col m4\">\n        <div className=\"avatar\">\n          <JazzIcon diameter={40} seed={jsNumberForAddress(account)} />\n          <p className=\"account truncate\">{account}</p>\n          <p className=\"balance\">{balance} ETH</p>\n        </div>\n      </div>\n    \n  );\n};\n\nexport default Account;\n","import React, {useEffect} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport \"./Account.css\";\n\nconst Information = ({drizzle, greetings, serviceFee}) => {\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m12\">\n        <p>The current greetings is: {greetings}</p>\n      </div>\n      <div className=\"col m12\">\n        <p>\n          The service fee is:{\" \"}\n          {serviceFee !== null\n            ? drizzle.web3.utils.fromWei(serviceFee, \"ether\")\n            : null}{\" \"}\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Information;\n","import React, {useState, useEffect, useRef} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst Greetings = ({drizzle, account, serviceFee}) => {\n  const refFirstField = useRef(null);\n\n  const [greetings, setGreetings] = useState(\"\");\n\n  useEffect(() => {\n    M.AutoInit();\n\n    // give focus to the first field\n    if (refFirstField !== null) {\n      refFirstField.current.focus();\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onChange = e => {\n    setGreetings(e.target.value);\n  };\n\n  const onSaveGreetings = () => {\n    const {Greetings} = drizzle.contracts;\n\n    // save the project\n    Greetings.methods\n      .setGreetings(greetings)\n      .send({\n        from: account,\n        gas: 500000,\n        value: serviceFee\n      })\n      .on(\"receipt\", receipt => {\n        console.log(receipt);\n      })\n      .on(\"error\", err => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m9 input-field\">\n        <textarea\n          className=\"materialize-textarea has-character-counter\"\n          ref={refFirstField}\n          type=\"text\"\n          name=\"message\"\n          value={greetings}\n          data-length={50}\n          onChange={onChange}\n          style={{height: \"4rem\"}}\n        />\n\n        <label htmlFor=\"title\" className=\"active\">\n          Enter a new Greetings\n        </label>\n      </div>\n      <div className=\"col m3 input-field\">\n        <a\n          href=\"#!\"\n          className=\"waves-effect waves-light btn left primary-content blue\"\n          onClick={() => onSaveGreetings()}\n          style={{margin: \"5px\"}}\n        >\n          Send\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Greetings;\n","import React, {useState} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nconst ServiceFee = ({drizzle, account, serviceFee}) => {\n  const [newFee, setNewFee] = useState(\n    drizzle.web3.utils.fromWei(serviceFee, \"ether\")\n  );\n\n  const onChange = e => {\n    setNewFee(e.target.value);\n  };\n\n  const onSaveServiceFee = () => {\n    const {Greetings} = drizzle.contracts;\n\n    // save the project\n    Greetings.methods\n      .setServiceFee(drizzle.web3.utils.toWei(newFee))\n      .send({\n        from: account,\n        gas: 500000\n      })\n      .on(\"receipt\", receipt => {\n        console.log(receipt);\n      })\n      .on(\"error\", err => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m9 input-field\">\n        <input\n          type=\"number\"\n          name=\"serviceFee\"\n          value={newFee}\n          min={0}\n          onChange={onChange}\n          step={\".01\"}\n        />\n        <label htmlFor=\"price\" className=\"active\">\n          Service fee in ETH\n        </label>\n      </div>\n      <div className=\"col m3 input-field\">\n        <a\n          href=\"#!\"\n          className=\"waves-effect waves-light btn left primary-content blue\"\n          onClick={() => onSaveServiceFee()}\n          style={{margin: \"5px\"}}\n        >\n          Send\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceFee;\n","import React, {useState, useEffect} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport Account from \"./components/Account\";\nimport Information from \"./components/Information\";\nimport Greetings from \"./components/Greetings\";\nimport ServiceFee from \"./components/ServiceFee\";\n\nimport \"./App.css\";\n\nconst App = ({drizzleContext}) => {\n  const {drizzleState, drizzle, initialized} = drizzleContext;\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [owner, setOwner] = useState(null);\n\n  const [greetingsKey, setGreetingsKey] = useState(null);\n  const [serviceFeeKey, setServiceFeeKey] = useState(null);\n\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (initialized) {\n      async function fetchAccount() {\n        const currAccout = drizzleState.accounts[0];\n        const currBalance = await drizzle.web3.eth.getBalance(currAccout);\n\n        setAccount(currAccout);\n        setBalance(drizzle.web3.utils.fromWei(currBalance, \"ether\"));\n\n        M.CharacterCounter.init(\n          document.querySelectorAll(\".has-character-counter\")\n        );\n\n        const {Greetings} = drizzle.contracts;\n        setGreetingsKey(Greetings.methods.getGreetings.cacheCall());\n        setServiceFeeKey(\n          Greetings.methods.getServiceFee.cacheCall({from: currAccout})\n        );\n\n        setOwner(await Greetings.methods.owner().call());\n      }\n      fetchAccount();\n    }\n    // eslint-disable-next-line\n  }, [initialized, drizzleState]);\n\n  if (!initialized || account === null) {\n    return (\n      <div className=\"container\">\n        <h2>Preparing the Dapp ...</h2>\n      </div>\n    );\n  }\n\n  // detect account changes from Metamask\n  window.ethereum.on(\"accountsChanged\", function(accounts) {\n    // reload the page to refresh all context\n    window.location.reload();\n  });\n\n  // prepare ...\n  let currentGreetings = null;\n  if (greetingsKey !== null) {\n    if (\n      drizzleState.contracts.Greetings.getGreetings[greetingsKey] &&\n      drizzleState.contracts.Greetings.getGreetings[greetingsKey].value\n    ) {\n      currentGreetings =\n        drizzleState.contracts.Greetings.getGreetings[greetingsKey].value;\n    }\n  }\n\n  let serviceFeeRef = null;\n  if (serviceFeeKey !== null) {\n    if (\n      drizzleState.contracts.Greetings.getServiceFee[serviceFeeKey] &&\n      drizzleState.contracts.Greetings.getServiceFee[serviceFeeKey].value\n    ) {\n      serviceFeeRef =\n        drizzleState.contracts.Greetings.getServiceFee[serviceFeeKey].value;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Account account={account} balance={balance} />\n\n        <div className=\"col m8 greetings-data\">\n          <Information\n            drizzle={drizzle}\n            greetings={currentGreetings}\n            serviceFee={serviceFeeRef}\n          />\n          <Greetings\n            drizzle={drizzle}\n            account={account}\n            serviceFee={serviceFeeRef}\n          />\n\n          {owner === account && (\n            <ServiceFee\n              drizzle={drizzle}\n              account={account}\n              serviceFee={serviceFeeRef}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {DrizzleContext} from \"@drizzle/react-plugin\";\nimport {Drizzle, generateStore} from \"@drizzle/store\";\n\nimport drizzleOptions from \"./drizzleOptions\";\n\nimport App from \"./App\";\n\n// configure drizzle\nconst drizzleStore = generateStore(drizzleOptions);\nconst drizzle = new Drizzle(drizzleOptions, drizzleStore);\n\nReactDOM.render(\n  <DrizzleContext.Provider drizzle={drizzle}>\n    <DrizzleContext.Consumer>\n      {drizzleContext => {\n        return <App drizzleContext={drizzleContext} />;\n      }}\n    </DrizzleContext.Consumer>\n  </DrizzleContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}