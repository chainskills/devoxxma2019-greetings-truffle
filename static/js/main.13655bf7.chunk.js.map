{"version":3,"sources":["drizzleOptions.js","components/Account.js","components/Information.js","components/Greetings.js","components/ServiceFee.js","components/Events.js","App.js","index.js"],"names":["drizzleOptions","web3","block","fallback","type","url","contracts","events","ChainBizz","Account","account","balance","useEffect","M","AutoInit","className","diameter","seed","jsNumberForAddress","parseFloat","toFixed","Information","drizzle","greetings","serviceFee","utils","fromWei","Greetings","refFirstField","useRef","useState","setGreetings","current","focus","ref","name","value","data-length","onChange","e","target","style","height","htmlFor","href","onClick","methods","send","from","gas","on","err","console","error","margin","ServiceFee","newFee","setNewFee","min","step","setServiceFee","toWei","receipt","log","Events","owner","eventGreetings","setEventGreetings","eventServiceFee","setEventServiceFee","Map","eventMap","setEventMap","allEvents","Array","values","reverse","forEach","evt","currentEvent","key","message","push","unsubscribe","event","GreetingsChangedEvent","fromBlock","toBlock","get","id","eventMessage","returnValues","_account","_greetings","set","NewServiceFeeEvent","_serviceFee","subscribe","App","drizzleContext","drizzleState","initialized","setAccount","setBalance","setOwner","greetingsKey","setGreetingsKey","serviceFeeKey","setServiceFeeKey","a","currAccout","accounts","eth","getBalance","currBalance","CharacterCounter","init","document","querySelectorAll","getGreetings","cacheCall","getServiceFee","call","fetchAccount","window","ethereum","location","reload","currentGreetings","serviceFeeRef","drizzleStore","generateStore","Drizzle","ReactDOM","render","Provider","Consumer","getElementById"],"mappings":"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","file":"static/js/main.13655bf7.chunk.js","sourcesContent":["import Greetings from \"./contracts/Greetings.json\";\n\nconst drizzleOptions = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:8545\"\n    }\n  },\n  contracts: [Greetings],\n  events: {\n    ChainBizz: [\"GreetingsChangedEvent\", \"NewServiceFeeEvent\"]\n  }\n};\n\nexport default drizzleOptions;\n","import React, {useEffect} from \"react\";\nimport JazzIcon, {jsNumberForAddress} from \"react-jazzicon\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport \"./Account.css\";\n\nconst Account = ({account, balance}) => {\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"col m4\">\n      <div className=\"avatar\">\n        <JazzIcon diameter={40} seed={jsNumberForAddress(account)} />\n        <p className=\"account truncate\">{account}</p>\n        <p className=\"balance\">{parseFloat(balance).toFixed(4)} ETH</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, {useEffect} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport \"./Account.css\";\n\nconst Information = ({drizzle, greetings, serviceFee}) => {\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m12\">\n        <p>The current greetings is: {greetings}</p>\n      </div>\n      <div className=\"col m12\">\n        <p>\n          The service fee is:{\" \"}\n          {serviceFee !== null\n            ? drizzle.web3.utils.fromWei(serviceFee, \"ether\")\n            : null}{\" \"}\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Information;\n","import React, {useState, useEffect, useRef} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst Greetings = ({drizzle, account, serviceFee}) => {\n  const refFirstField = useRef(null);\n\n  const [greetings, setGreetings] = useState(\"\");\n\n  useEffect(() => {\n    M.AutoInit();\n\n    // give focus to the first field\n    if (refFirstField !== null) {\n      refFirstField.current.focus();\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onChange = e => {\n    setGreetings(e.target.value);\n  };\n\n  const onSaveGreetings = () => {\n    const {Greetings} = drizzle.contracts;\n\n    // save the project\n    Greetings.methods\n      .setGreetings(greetings)\n      .send({\n        from: account,\n        gas: 500000,\n        value: serviceFee\n      })\n      .on(\"error\", err => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m9 input-field\">\n        <textarea\n          className=\"materialize-textarea has-character-counter\"\n          ref={refFirstField}\n          type=\"text\"\n          name=\"message\"\n          value={greetings}\n          data-length={50}\n          onChange={onChange}\n          style={{height: \"4rem\"}}\n        />\n\n        <label htmlFor=\"title\" className=\"active\">\n          Enter a new Greetings\n        </label>\n      </div>\n      <div className=\"col m3 input-field\">\n        <a\n          href=\"#!\"\n          className=\"waves-effect waves-light btn left primary-content blue\"\n          onClick={() => onSaveGreetings()}\n          style={{margin: \"5px\"}}\n        >\n          Send\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Greetings;\n","import React, {useState} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nconst ServiceFee = ({drizzle, account, serviceFee}) => {\n  const [newFee, setNewFee] = useState(\n    drizzle.web3.utils.fromWei(serviceFee !== null ? serviceFee : 0, \"ether\")\n  );\n\n  const onChange = e => {\n    setNewFee(e.target.value);\n  };\n\n  const onSaveServiceFee = () => {\n    const {Greetings} = drizzle.contracts;\n\n    // save the project\n    Greetings.methods\n      .setServiceFee(drizzle.web3.utils.toWei(newFee))\n      .send({\n        from: account,\n        gas: 500000\n      })\n      .on(\"receipt\", receipt => {\n        console.log(receipt);\n      })\n      .on(\"error\", err => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col m9 input-field\">\n        <input\n          type=\"number\"\n          name=\"serviceFee\"\n          value={newFee}\n          min={0}\n          onChange={onChange}\n          step={\".01\"}\n        />\n        <label htmlFor=\"price\" className=\"active\">\n          Service fee in ETH\n        </label>\n      </div>\n      <div className=\"col m3 input-field\">\n        <a\n          href=\"#!\"\n          className=\"waves-effect waves-light btn left primary-content blue\"\n          onClick={() => onSaveServiceFee()}\n          style={{margin: \"5px\"}}\n        >\n          Send\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceFee;\n","import React, {useState} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nconst Events = ({drizzle, owner}) => {\n  const {Greetings} = drizzle.contracts;\n  const [eventGreetings, setEventGreetings] = useState(null);\n  const [eventServiceFee, setEventServiceFee] = useState(null);\n  const [eventMap, setEventMap] = useState(new Map());\n\n  const subscribe = () => {\n    if (eventGreetings === null) {\n      const event = Greetings.events\n        .GreetingsChangedEvent({\n          fromBlock: \"latest\",\n          toBlock: \"latest\"\n        })\n        .on(\"data\", function(eventGreetings) {\n          if (typeof eventMap.get(eventGreetings.id) === \"undefined\") {\n            const eventMessage =\n              \"Account: \" +\n              eventGreetings.returnValues._account +\n              \" Greetings: \" +\n              eventGreetings.returnValues._greetings;\n\n            eventMap.set(eventGreetings.id, {\n              key: eventGreetings.id,\n              name: eventGreetings.event,\n              message: eventMessage\n            });\n            setEventMap(eventMap);\n          }\n        })\n        .on(\"error\", function(error) {\n          console.error(error);\n        });\n\n      setEventGreetings(event);\n    }\n\n    if (owner && eventServiceFee === null) {\n      const event = Greetings.events\n        .NewServiceFeeEvent({\n          fromBlock: \"latest\",\n          toBlock: \"latest\"\n        })\n        .on(\"data\", function(eventServiceFee) {\n          if (typeof eventMap.get(eventServiceFee.id) === \"undefined\") {\n            const eventMessage =\n              \"New Service fee: \" +\n              drizzle.web3.utils.fromWei(\n                eventServiceFee.returnValues._serviceFee,\n                \"ether\"\n              );\n\n            eventMap.set(eventServiceFee.id, {\n              key: eventServiceFee.id,\n              name: eventServiceFee.event,\n              message: eventMessage\n            });\n\n            setEventMap(eventMap);\n          }\n        })\n        .on(\"error\", function(error) {\n          console.error(error);\n        });\n\n      setEventServiceFee(event);\n    }\n  };\n\n  const unsubscribe = () => {\n    if (eventGreetings !== null) {\n      eventGreetings.unsubscribe();\n      setEventGreetings(null);\n    }\n    if (eventServiceFee !== null) {\n      eventServiceFee.unsubscribe();\n      setEventServiceFee(null);\n    }\n\n    setEventMap(new Map());\n  };\n\n  let allEvents = [];\n  if (eventMap !== null && typeof eventMap !== \"undefined\") {\n    // received a new event\n    const eventsList = Array.from(eventMap.values());\n    eventsList.reverse().forEach(evt => {\n      const currentEvent = (\n        <p key={evt.key}>\n          [<span className=\"notifications-item\">{evt.name}</span>] ->{\" \"}\n          <span>{evt.message}</span>\n        </p>\n      );\n\n      allEvents.push(currentEvent);\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col m3 push-m8 input-field\">\n          {eventGreetings !== null && (\n            <a\n              href=\"#!\"\n              className=\"waves-effect waves-light btn left primary-content blue\"\n              style={{margin: \"5px\"}}\n              onClick={() => unsubscribe()}\n            >\n              Unsubscribe\n            </a>\n          )}\n          {eventGreetings === null && (\n            <a\n              href=\"#!\"\n              className=\"waves-effect waves-light btn left primary-content blue\"\n              style={{margin: \"5px\"}}\n              onClick={() => subscribe()}\n            >\n              Subscribe\n            </a>\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col m12\">{allEvents}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React, {useState, useEffect} from \"react\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport Account from \"./components/Account\";\nimport Information from \"./components/Information\";\nimport Greetings from \"./components/Greetings\";\nimport ServiceFee from \"./components/ServiceFee\";\nimport Events from \"./components/Events\";\n\nimport \"./App.css\";\n\nconst App = ({drizzleContext}) => {\n  const {drizzleState, drizzle, initialized} = drizzleContext;\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [owner, setOwner] = useState(null);\n\n  const [greetingsKey, setGreetingsKey] = useState(null);\n  const [serviceFeeKey, setServiceFeeKey] = useState(null);\n\n  useEffect(() => {\n    M.AutoInit();\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (initialized) {\n      async function fetchAccount() {\n        const currAccout = drizzleState.accounts[0];\n        const currBalance = await drizzle.web3.eth.getBalance(currAccout);\n\n        setAccount(currAccout);\n        setBalance(drizzle.web3.utils.fromWei(currBalance, \"ether\"));\n\n        M.CharacterCounter.init(\n          document.querySelectorAll(\".has-character-counter\")\n        );\n\n        const {Greetings} = drizzle.contracts;\n        setGreetingsKey(Greetings.methods.getGreetings.cacheCall());\n        setServiceFeeKey(\n          Greetings.methods.getServiceFee.cacheCall({from: currAccout})\n        );\n\n        setOwner(await Greetings.methods.owner().call());\n      }\n      fetchAccount();\n    }\n    // eslint-disable-next-line\n  }, [initialized, drizzleState]);\n\n  if (!initialized || account === null) {\n    return (\n      <div className=\"container\">\n        <h2>Preparing the Dapp ...</h2>\n      </div>\n    );\n  }\n\n  // detect account changes from Metamask\n  window.ethereum.on(\"accountsChanged\", function(accounts) {\n    // reload the page to refresh all context\n    window.location.reload();\n  });\n\n  // prepare ...\n  let currentGreetings = null;\n  if (greetingsKey !== null) {\n    if (\n      drizzleState.contracts.Greetings.getGreetings[greetingsKey] &&\n      drizzleState.contracts.Greetings.getGreetings[greetingsKey].value\n    ) {\n      currentGreetings =\n        drizzleState.contracts.Greetings.getGreetings[greetingsKey].value;\n    }\n  }\n\n  let serviceFeeRef = null;\n  if (serviceFeeKey !== null) {\n    if (\n      drizzleState.contracts.Greetings.getServiceFee[serviceFeeKey] &&\n      drizzleState.contracts.Greetings.getServiceFee[serviceFeeKey].value\n    ) {\n      serviceFeeRef =\n        drizzleState.contracts.Greetings.getServiceFee[serviceFeeKey].value;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Account account={account} balance={balance} />\n\n        <div className=\"col m8 greetings-data\">\n          <Information\n            drizzle={drizzle}\n            greetings={currentGreetings}\n            serviceFee={serviceFeeRef}\n          />\n          <Greetings\n            drizzle={drizzle}\n            account={account}\n            serviceFee={serviceFeeRef}\n          />\n\n          {owner === account && (\n            <ServiceFee\n              drizzle={drizzle}\n              account={account}\n              serviceFee={serviceFeeRef}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col m8 push-m4 greetings-data\">\n          <Events\n            drizzle={drizzle}\n            owner={owner === account ? true : false}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {DrizzleContext} from \"@drizzle/react-plugin\";\nimport {Drizzle, generateStore} from \"@drizzle/store\";\n\nimport drizzleOptions from \"./drizzleOptions\";\n\nimport App from \"./App\";\n\n// configure drizzle\nconst drizzleStore = generateStore(drizzleOptions);\nconst drizzle = new Drizzle(drizzleOptions, drizzleStore);\n\nReactDOM.render(\n  <DrizzleContext.Provider drizzle={drizzle}>\n    <DrizzleContext.Consumer>\n      {drizzleContext => {\n        return <App drizzleContext={drizzleContext} />;\n      }}\n    </DrizzleContext.Consumer>\n  </DrizzleContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}